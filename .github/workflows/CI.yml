name: CI
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  Test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: ${{ matrix.os }} - Atom ${{ matrix.atom_channel }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        atom_channel: [stable, beta]
    steps:
      - uses: actions/checkout@v2
      - uses: UziTech/action-setup-atom@v1
        with:
          channel: ${{ matrix.atom_channel }}
      - name: Versions
        run: apm -v
      - name: Install APM dependencies
        run: |
          apm ci  # uses locked module. use `apm install` for non-locked
      - name: Run tests 👩🏾‍💻
        run: npm run test

  Lint:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # - name: Commit lint ✨
      #   uses: wagoid/commitlint-github-action@v1
      - uses: actions/setup-node@v2.1.2
        with:
          node-version: "14.x"
      - name: Install NPM dependencies
        run: |
          npm ci  # uses locked module. use `npm install` for non-locked
      - name: Lint ✨
        run: npm run lint

  # Release:
  #   needs: [Test, Lint]
  #   if: github.ref == 'refs/heads/master' &&
  #     github.event.repository.fork == false
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: UziTech/action-setup-atom@v1
  #     - uses: actions/setup-node@v2.1.2
  #       with:
  #         node-version: "14.x"
  #     - name: NPM install
  #       run: npm ci
  #     # - name: Build and Commit
  #     #   run: npm run build-commit
  #     - name: Release 🎉
  #       uses: cycjimmy/semantic-release-action@v2
  #       with:
  #         extends: |
  #           @semantic-release/apm-config
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         ATOM_ACCESS_TOKEN: ${{ secrets.ATOM_ACCESS_TOKEN  }}

  # Automerge:
  #   needs: [Test, Coverage, Lint]
  #   runs-on: ubuntu-latest
  #   if: |
  #     github.actor == 'dependabot[bot]' &&
  #     github.event_name == 'pull_request' &&
  #     startsWith(github.event.pull_request.title, 'chore(deps-dev):')
  #   steps:
  #     - name: '@dependabot merge'
  #       uses: actions/github-script@v2
  #       with:
  #         github-token: ${{secrets.GH_TOKEN}}
  #         script: |
  #           await github.issues.createComment({
  #             owner: context.payload.repository.owner.login,
  #             repo: context.payload.repository.name,
  #             issue_number: context.payload.pull_request.number,
  #             body: '@dependabot merge'
  #           })

  Skip:
    if: contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    steps:
      - name: Skip CI 🚫
        run: echo skip ci
